{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% block navButtons %}
    {% if editRoute is defined %}
        {{ UI.editButton({
            'path': path('app_issue_update', { id: entity.id }),
            'entity_label': 'issue'|trans
        }) }}
    {% endif %}
    {% if  entity.type == 4  %}
        {{ UI.editButton({
            'path' : path('app_issue_create_subtask', { id: entity.id }),
            'entity_label': 'app.issue.create_sutask'|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
        'entity': entity,
        'indexPath': path('app_issue_index'),
        'indexLabel': 'Issues',
        'entityTitle': entity.summary
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({ '%entityName%': 'Issue' }) %}
        {{  include('OroUIBundle::page_title_block.html.twig', { title: title }) }}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}
    <li>{{ 'oro.ui.created_at'|trans }}: {{ entity.created ? entity.created|oro_format_datetime : 'N/A' }}</li>
    <li>{{ 'oro.ui.updated_at'|trans }}: {{ entity.updated ? entity.updated|oro_format_datetime : 'N/A' }}</li>
{% endblock stats %}

{% block content_data %}

    {# widget#}

    {% set issueData %}
        {{ UI.renderProperty('app.issue.summary.label', entity.summary) }}
        {{ UI.renderProperty('app.issue.code.label', entity.code) }}
        {{ UI.renderHtmlProperty('app.issue.description.label', entity.description) }}
        {{ UI.renderProperty('app.issue.asignee.label', entity.asignee) }}
        {{ UI.renderProperty('app.issue.priority.label', entity.priority) }}
        {{ UI.renderProperty('app.issue.type.label', entity.type) }}
        {{ UI.renderProperty('app.issue.resolution.label', entity.resolution) }}
        {{ UI.renderProperty('app.issue.relatedIssues.label', entity.relatedIssues) }}
        {{ UI.renderProperty('app.issue.summary.label', entity.notes) }}

        <div class="responsive-block">
            {{ entityConfig.renderDynamicFields(entity) }}
        </div>
    {% endset %}

    {% set dataBlocks = [
        {
            'title': 'General Information'|trans,
            'class': 'active',
            'subblocks': [
                {'data' : [issueData]}
            ]
        }
    ] %}

    {% set id = 'issueView' %}
    {% set data = { 'dataBlocks': dataBlocks } %}
    {{ parent() }}
{% endblock content_data %}
